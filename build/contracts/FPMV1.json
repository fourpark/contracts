{
  "contractName": "FPMV1",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "secureToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "unFreezeToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZERO_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NOT_OWNER",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "freezeToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getSecuredState",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "frozenState",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SecuredMap",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "FrozenMap",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "unsecureToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060006301ffc9a77c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018060006380ac58cd7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001806000635b5e139f7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550600180600063780e9d637c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506040518060400160405280600781526020017f5661756c742031000000000000000000000000000000000000000000000000008152506006908051906020019062000253929190620002a8565b506040518060400160405280600581526020017f46504d563100000000000000000000000000000000000000000000000000000081525060079080519060200190620002a1929190620002a8565b5062000357565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002eb57805160ff19168380011785556200031c565b828001600101855582156200031c579182015b828111156200031b578251825591602001919060010190620002fe565b5b5090506200032b91906200032f565b5090565b6200035491905b808211156200035057600081600090555060010162000336565b5090565b90565b6132b680620003676000396000f3fe608060405234801561001057600080fd5b50600436106101f7576000357c01000000000000000000000000000000000000000000000000000000009004806371d78b1211610121578063c87b56dd116100bf578063f1d279ba1161008e578063f1d279ba14610c50578063f2fde38b14610ca0578063f92de0bf14610ce4578063fdbe500214610d34576101f7565b8063c87b56dd14610a3a578063d3fc986414610ae1578063deef5bae14610b84578063e985e9c514610bd4576101f7565b8063a22cb465116100fb578063a22cb46514610891578063b6854f96146108e1578063b88d4fde14610927578063bf230edb146109ea576101f7565b806371d78b12146107415780638da5cb5b146107c457806395d89b411461080e576101f7565b806323b872dd116101995780634f6ccce7116101685780634f6ccce7146105b6578063538ba4f9146105f85780636352211e1461067b57806370a08231146106e9576101f7565b806323b872dd1461044a5780632f745c59146104b857806342842e0e1461051a57806342966c6814610588576101f7565b8063081812fc116101d5578063081812fc1461032a578063095ea7b31461039857806318160ddd146103e657806321d2daa014610404576101f7565b806301ffc9a7146101fc57806306fdde031461026157806307551205146102e4575b600080fd5b6102476004803603602081101561021257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d7a565b604051808215151515815260200191505060405180910390f35b610269610de2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a957808201518184015260208101905061028e565b50505050905090810190601f1680156102d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610310600480360360208110156102fa57600080fd5b8101908080359060200190929190505050610e84565b604051808215151515815260200191505060405180910390f35b6103566004803603602081101561034057600080fd5b8101908080359060200190929190505050610f4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103e4600480360360408110156103ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ff6565b005b6103ee61128c565b6040518082815260200191505060405180910390f35b6104306004803603602081101561041a57600080fd5b8101908080359060200190929190505050611299565b604051808215151515815260200191505060405180910390f35b6104b66004803603606081101561046057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061131b565b005b610504600480360360408110156104ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b1565b6040518082815260200191505060405180910390f35b6105866004803603606081101561053057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061165e565b005b6105b46004803603602081101561059e57600080fd5b810190808035906020019092919050505061167e565b005b6105e2600480360360208110156105cc57600080fd5b81019080803590602001909291905050506117b7565b6040518082815260200191505060405180910390f35b6106006117e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610640578082015181840152602081019050610625565b50505050905090810190601f16801561066d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106a76004803603602081101561069157600080fd5b8101908080359060200190929190505050611822565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61072b600480360360208110156106ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611899565b6040518082815260200191505060405180910390f35b6107496118e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078957808201518184015260208101905061076e565b50505050905090810190601f1680156107b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107cc61191d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610816611942565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561085657808201518184015260208101905061083b565b50505050905090810190601f1680156108835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108df600480360360408110156108a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506119e4565b005b61090d600480360360208110156108f757600080fd5b8101908080359060200190929190505050611ae5565b604051808215151515815260200191505060405180910390f35b6109e86004803603608081101561093d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156109a457600080fd5b8201836020820111156109b657600080fd5b803590602001918460018302840111640100000000831117156109d857600080fd5b9091929391929390505050611b67565b005b610a1660048036036020811015610a0057600080fd5b8101908080359060200190929190505050611bbe565b60405180826001811115610a2657fe5b60ff16815260200191505060405180910390f35b610a6660048036036020811015610a5057600080fd5b8101908080359060200190929190505050611be8565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610aa6578082015181840152602081019050610a8b565b50505050905090810190601f168015610ad35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b8260048036036060811015610af757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b3e57600080fd5b820183602082011115610b5057600080fd5b80359060200191846001830284011164010000000083111715610b7257600080fd5b9091929391929390505050611d0c565b005b610bb060048036036020811015610b9a57600080fd5b8101908080359060200190929190505050611eab565b60405180826001811115610bc057fe5b60ff16815260200191505060405180910390f35b610c3660048036036040811015610bea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ed5565b604051808215151515815260200191505060405180910390f35b610c7c60048036036020811015610c6657600080fd5b8101908080359060200190929190505050611f69565b60405180826001811115610c8c57fe5b60ff16815260200191505060405180910390f35b610ce260048036036020811015610cb657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f89565b005b610d1060048036036020811015610cfa57600080fd5b8101908080359060200190929190505050612282565b60405180826001811115610d2057fe5b60ff16815260200191505060405180910390f35b610d6060048036036020811015610d4a57600080fd5b81019080803590602001909291905050506122a2565b604051808215151515815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e7a5780601f10610e4f57610100808354040283529160200191610e7a565b820191906000526020600020905b815481529060010190602001808311610e5d57829003601f168201915b5050505050905090565b600081600180811115610e9357fe5b600e600083815260200190815260200160002060009054906101000a900460ff166001811115610ebf57fe5b14610ec957600080fd5b600180811115610ed557fe5b600e600085815260200190815260200160002060009054906101000a900460ff166001811115610f0157fe5b14610f0b57600080fd5b6000600e600085815260200190815260200160002060006101000a81548160ff02191690836001811115610f3b57fe5b02179055506001915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610fba57600080fd5b6003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806110ef5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6110f857600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561116657600080fd5b60006002600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156111d757600080fd5b856003600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600980549050905090565b60008060018111156112a757fe5b600d600084815260200190815260200160002060009054906101000a900460ff1660018111156112d357fe5b146112dd57600080fd5b6001600d600084815260200190815260200160002060006101000a81548160ff0219169083600181111561130d57fe5b021790555060019050919050565b8060006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806113ec57503373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b8061147d5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61148657600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114f457600080fd5b60006002600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461156457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561159e57600080fd5b6115a8868661236a565b50505050505050565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050821061160157600080fd5b600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061164b57fe5b9060005260206000200154905092915050565b6116798383836040518060200160405280600081525061241f565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561176f578082015181840152602081019050611754565b50505050905090810190601f16801561179c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506117b4816128cc565b50565b600060098054905082106117ca57600080fd5b600982815481106117d757fe5b90600052602060002001549050919050565b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561189457600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118d457600080fd5b6118dd8261297f565b9050919050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119da5780601f106119af576101008083540402835291602001916119da565b820191906000526020600020905b8154815290600101906020018083116119bd57829003601f168201915b5050505050905090565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600180811115611af357fe5b600d600084815260200190815260200160002060009054906101000a900460ff166001811115611b1f57fe5b14611b2957600080fd5b6000600d600084815260200190815260200160002060006101000a81548160ff02191690836001811115611b5957fe5b021790555060019050919050565b611bb785858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061241f565b5050505050565b6000600e600083815260200190815260200160002060009054906101000a900460ff169050919050565b606081600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c5857600080fd5b600860008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cff5780601f10611cd457610100808354040283529160200191611cff565b820191906000526020600020905b815481529060010190602001808311611ce257829003601f168201915b5050505050915050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090611e38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611dfd578082015181840152602081019050611de2565b50505050905090810190601f168015611e2a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611e4283611ae5565b50611e4c836122a2565b50611e5784846129cb565b611ea58383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612a24565b50505050565b6000600d600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600e6020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906120b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561207a57808201518184015260208101905061205f565b50505050905090810190601f1680156120a75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3031383030320000000000000000000000000000000000000000000000000000815250906121c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561218857808201518184015260208101905061216d565b50505050905090810190601f1680156121b55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d6020528060005260406000206000915054906101000a900460ff1681565b600081600060018111156122b257fe5b600e600083815260200190815260200160002060009054906101000a900460ff1660018111156122de57fe5b146122e857600080fd5b600060018111156122f557fe5b600e600085815260200190815260200160002060009054906101000a900460ff16600181111561232157fe5b1461232b57600080fd5b6001600e600085815260200190815260200160002060006101000a81548160ff0219169083600181111561235b57fe5b02179055506001915050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506123ab82612abf565b6123b58183612b60565b6123bf8383612d8f565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806124f057503373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806125815750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61258a57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156125f857600080fd5b60006002600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461266857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156126a257600080fd5b6126ac878761236a565b6126cb8773ffffffffffffffffffffffffffffffffffffffff16612ed9565b156128c25760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127c75780820151818401526020810190506127ac565b50505050905090810190601f1680156127f45780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561281657600080fd5b505af115801561282a573d6000803e3d6000fd5b505050506040513d602081101561284057600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146128c057600080fd5b505b5050505050505050565b6128d581612eec565b6000600a60008381526020019081526020016000205490506000600160098054905003905060006009828154811061290957fe5b90600052602060002001549050806009848154811061292457fe5b906000526020600020018190555060098054809190600190036129479190613171565b5082600a6000838152602001908152602001600020819055506000600a60008681526020019081526020016000208190555050505050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6129d58282612f47565b600060098290806001815401808255809150509060018203906000526020600020016000909192909190915055905060018103600a600084815260200190815260200160002081905550505050565b81600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612a9257600080fd5b81600860008581526020019081526020016000209080519060200190612ab992919061319d565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612b5d576003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612bcb57600080fd5b6002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600c600083815260200190815260200160002054905060006001600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050039050818114612d36576000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612cb657fe5b9060005260206000200154905080600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110612d0e57fe5b906000526020600020018190555082600c600083815260200190815260200160002081905550505b600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612d889190613171565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612dfb57600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150509060018203906000526020600020016000909192909190915055905060018103600c600084815260200190815260200160002081905550505050565b600080823b905060008111915050919050565b612ef581613057565b60006008600083815260200190815260200160002080546001816001161561010002031660029004905014612f4457600860008281526020019081526020016000206000612f43919061321d565b5b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f8157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612fed57600080fd5b612ff78282612d8f565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156130c557600080fd5b60006002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061310683612abf565b6131108184612b60565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b815481835581811115613198578183600052602060002091820191016131979190613265565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106131de57805160ff191683800117855561320c565b8280016001018555821561320c579182015b8281111561320b5782518255916020019190600101906131f0565b5b5090506132199190613265565b5090565b50805460018160011615610100020316600290046000825580601f106132435750613262565b601f0160209004906000526020600020908101906132619190613265565b5b50565b61328791905b8082111561328357600081600090555060010161326b565b5090565b9056fea165627a7a72305820d403850b5a29189c4dba7e49d4f46917a8839c34626abf508c92a9ca4732679f0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f7576000357c01000000000000000000000000000000000000000000000000000000009004806371d78b1211610121578063c87b56dd116100bf578063f1d279ba1161008e578063f1d279ba14610c50578063f2fde38b14610ca0578063f92de0bf14610ce4578063fdbe500214610d34576101f7565b8063c87b56dd14610a3a578063d3fc986414610ae1578063deef5bae14610b84578063e985e9c514610bd4576101f7565b8063a22cb465116100fb578063a22cb46514610891578063b6854f96146108e1578063b88d4fde14610927578063bf230edb146109ea576101f7565b806371d78b12146107415780638da5cb5b146107c457806395d89b411461080e576101f7565b806323b872dd116101995780634f6ccce7116101685780634f6ccce7146105b6578063538ba4f9146105f85780636352211e1461067b57806370a08231146106e9576101f7565b806323b872dd1461044a5780632f745c59146104b857806342842e0e1461051a57806342966c6814610588576101f7565b8063081812fc116101d5578063081812fc1461032a578063095ea7b31461039857806318160ddd146103e657806321d2daa014610404576101f7565b806301ffc9a7146101fc57806306fdde031461026157806307551205146102e4575b600080fd5b6102476004803603602081101561021257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d7a565b604051808215151515815260200191505060405180910390f35b610269610de2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a957808201518184015260208101905061028e565b50505050905090810190601f1680156102d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610310600480360360208110156102fa57600080fd5b8101908080359060200190929190505050610e84565b604051808215151515815260200191505060405180910390f35b6103566004803603602081101561034057600080fd5b8101908080359060200190929190505050610f4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103e4600480360360408110156103ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ff6565b005b6103ee61128c565b6040518082815260200191505060405180910390f35b6104306004803603602081101561041a57600080fd5b8101908080359060200190929190505050611299565b604051808215151515815260200191505060405180910390f35b6104b66004803603606081101561046057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061131b565b005b610504600480360360408110156104ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b1565b6040518082815260200191505060405180910390f35b6105866004803603606081101561053057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061165e565b005b6105b46004803603602081101561059e57600080fd5b810190808035906020019092919050505061167e565b005b6105e2600480360360208110156105cc57600080fd5b81019080803590602001909291905050506117b7565b6040518082815260200191505060405180910390f35b6106006117e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610640578082015181840152602081019050610625565b50505050905090810190601f16801561066d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106a76004803603602081101561069157600080fd5b8101908080359060200190929190505050611822565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61072b600480360360208110156106ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611899565b6040518082815260200191505060405180910390f35b6107496118e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078957808201518184015260208101905061076e565b50505050905090810190601f1680156107b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107cc61191d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610816611942565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561085657808201518184015260208101905061083b565b50505050905090810190601f1680156108835780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108df600480360360408110156108a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506119e4565b005b61090d600480360360208110156108f757600080fd5b8101908080359060200190929190505050611ae5565b604051808215151515815260200191505060405180910390f35b6109e86004803603608081101561093d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156109a457600080fd5b8201836020820111156109b657600080fd5b803590602001918460018302840111640100000000831117156109d857600080fd5b9091929391929390505050611b67565b005b610a1660048036036020811015610a0057600080fd5b8101908080359060200190929190505050611bbe565b60405180826001811115610a2657fe5b60ff16815260200191505060405180910390f35b610a6660048036036020811015610a5057600080fd5b8101908080359060200190929190505050611be8565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610aa6578082015181840152602081019050610a8b565b50505050905090810190601f168015610ad35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b8260048036036060811015610af757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b3e57600080fd5b820183602082011115610b5057600080fd5b80359060200191846001830284011164010000000083111715610b7257600080fd5b9091929391929390505050611d0c565b005b610bb060048036036020811015610b9a57600080fd5b8101908080359060200190929190505050611eab565b60405180826001811115610bc057fe5b60ff16815260200191505060405180910390f35b610c3660048036036040811015610bea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ed5565b604051808215151515815260200191505060405180910390f35b610c7c60048036036020811015610c6657600080fd5b8101908080359060200190929190505050611f69565b60405180826001811115610c8c57fe5b60ff16815260200191505060405180910390f35b610ce260048036036020811015610cb657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f89565b005b610d1060048036036020811015610cfa57600080fd5b8101908080359060200190929190505050612282565b60405180826001811115610d2057fe5b60ff16815260200191505060405180910390f35b610d6060048036036020811015610d4a57600080fd5b81019080803590602001909291905050506122a2565b604051808215151515815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e7a5780601f10610e4f57610100808354040283529160200191610e7a565b820191906000526020600020905b815481529060010190602001808311610e5d57829003601f168201915b5050505050905090565b600081600180811115610e9357fe5b600e600083815260200190815260200160002060009054906101000a900460ff166001811115610ebf57fe5b14610ec957600080fd5b600180811115610ed557fe5b600e600085815260200190815260200160002060009054906101000a900460ff166001811115610f0157fe5b14610f0b57600080fd5b6000600e600085815260200190815260200160002060006101000a81548160ff02191690836001811115610f3b57fe5b02179055506001915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610fba57600080fd5b6003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806110ef5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6110f857600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561116657600080fd5b60006002600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156111d757600080fd5b856003600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600980549050905090565b60008060018111156112a757fe5b600d600084815260200190815260200160002060009054906101000a900460ff1660018111156112d357fe5b146112dd57600080fd5b6001600d600084815260200190815260200160002060006101000a81548160ff0219169083600181111561130d57fe5b021790555060019050919050565b8060006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806113ec57503373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b8061147d5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61148657600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114f457600080fd5b60006002600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461156457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561159e57600080fd5b6115a8868661236a565b50505050505050565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050821061160157600080fd5b600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061164b57fe5b9060005260206000200154905092915050565b6116798383836040518060200160405280600081525061241f565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561176f578082015181840152602081019050611754565b50505050905090810190601f16801561179c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506117b4816128cc565b50565b600060098054905082106117ca57600080fd5b600982815481106117d757fe5b90600052602060002001549050919050565b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561189457600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118d457600080fd5b6118dd8261297f565b9050919050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119da5780601f106119af576101008083540402835291602001916119da565b820191906000526020600020905b8154815290600101906020018083116119bd57829003601f168201915b5050505050905090565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000600180811115611af357fe5b600d600084815260200190815260200160002060009054906101000a900460ff166001811115611b1f57fe5b14611b2957600080fd5b6000600d600084815260200190815260200160002060006101000a81548160ff02191690836001811115611b5957fe5b021790555060019050919050565b611bb785858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061241f565b5050505050565b6000600e600083815260200190815260200160002060009054906101000a900460ff169050919050565b606081600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c5857600080fd5b600860008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cff5780601f10611cd457610100808354040283529160200191611cff565b820191906000526020600020905b815481529060010190602001808311611ce257829003601f168201915b5050505050915050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090611e38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611dfd578082015181840152602081019050611de2565b50505050905090810190601f168015611e2a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611e4283611ae5565b50611e4c836122a2565b50611e5784846129cb565b611ea58383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612a24565b50505050565b6000600d600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600e6020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906120b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561207a57808201518184015260208101905061205f565b50505050905090810190601f1680156120a75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3031383030320000000000000000000000000000000000000000000000000000815250906121c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561218857808201518184015260208101905061216d565b50505050905090810190601f1680156121b55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d6020528060005260406000206000915054906101000a900460ff1681565b600081600060018111156122b257fe5b600e600083815260200190815260200160002060009054906101000a900460ff1660018111156122de57fe5b146122e857600080fd5b600060018111156122f557fe5b600e600085815260200190815260200160002060009054906101000a900460ff16600181111561232157fe5b1461232b57600080fd5b6001600e600085815260200190815260200160002060006101000a81548160ff0219169083600181111561235b57fe5b02179055506001915050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506123ab82612abf565b6123b58183612b60565b6123bf8383612d8f565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806124f057503373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806125815750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61258a57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156125f857600080fd5b60006002600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461266857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156126a257600080fd5b6126ac878761236a565b6126cb8773ffffffffffffffffffffffffffffffffffffffff16612ed9565b156128c25760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127c75780820151818401526020810190506127ac565b50505050905090810190601f1680156127f45780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561281657600080fd5b505af115801561282a573d6000803e3d6000fd5b505050506040513d602081101561284057600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146128c057600080fd5b505b5050505050505050565b6128d581612eec565b6000600a60008381526020019081526020016000205490506000600160098054905003905060006009828154811061290957fe5b90600052602060002001549050806009848154811061292457fe5b906000526020600020018190555060098054809190600190036129479190613171565b5082600a6000838152602001908152602001600020819055506000600a60008681526020019081526020016000208190555050505050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6129d58282612f47565b600060098290806001815401808255809150509060018203906000526020600020016000909192909190915055905060018103600a600084815260200190815260200160002081905550505050565b81600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612a9257600080fd5b81600860008581526020019081526020016000209080519060200190612ab992919061319d565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612b5d576003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612bcb57600080fd5b6002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000600c600083815260200190815260200160002054905060006001600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050039050818114612d36576000600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612cb657fe5b9060005260206000200154905080600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110612d0e57fe5b906000526020600020018190555082600c600083815260200190815260200160002081905550505b600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612d889190613171565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612dfb57600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150509060018203906000526020600020016000909192909190915055905060018103600c600084815260200190815260200160002081905550505050565b600080823b905060008111915050919050565b612ef581613057565b60006008600083815260200190815260200160002080546001816001161561010002031660029004905014612f4457600860008281526020019081526020016000206000612f43919061321d565b5b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f8157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612fed57600080fd5b612ff78282612d8f565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156130c557600080fd5b60006002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061310683612abf565b6131108184612b60565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b815481835581811115613198578183600052602060002091820191016131979190613265565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106131de57805160ff191683800117855561320c565b8280016001018555821561320c579182015b8281111561320b5782518255916020019190600101906131f0565b5b5090506132199190613265565b5090565b50805460018160011615610100020316600290046000825580601f106132435750613262565b601f0160209004906000526020600020908101906132619190613265565b5b50565b61328791905b8082111561328357600081600090555060010161326b565b5090565b9056fea165627a7a72305820d403850b5a29189c4dba7e49d4f46917a8839c34626abf508c92a9ca4732679f0029",
  "sourceMap": "146:207:0:-;;;268:82;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:82:0;988:10:5;980:5;;:18;;;;;;;;;;;;;;;;;;455:4:15;421:19;:31;441:10;421:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3916:4:12;3882:19;:31;3902:10;3882:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;721:4:11;687:19;:31;707:10;687:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;817:4:10;783:19;:31;803:10;783:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;301:19:0;;;;;;;;;;;;;;;;;:7;:19;;;;;;;;;;;;:::i;:::-;;326;;;;;;;;;;;;;;;;;:9;:19;;;;;;;;;;;;:::i;:::-;;146:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "146:207:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;146:207:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:150:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;677:150:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;864:100:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;864:100:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1883:233:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1883:233:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8853:160:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8853:160:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6815:315;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6815:315:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;951:100:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;984:200:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;984:200:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6103:300:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6103:300:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1575:212:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1575:212:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5380:157:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5380:157:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;924:101:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;924:101:1;;;;;;;;;;;;;;;;;:::i;:::-;;1185:161:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1185:161:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;434:46:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;434:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8446:170:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8446:170:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8028:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8028:167:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;387:43:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;387:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1067:108:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1067:108:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7532:210:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7532:210:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;751:198:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;751:198:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4795:186:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4795:186:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4795:186:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4795:186:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4795:186:12;;;;;;;;;;;;:::i;:::-;;2434:116:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2434:116:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:158:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1321:158:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1321:158:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:245:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;577:245:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;577:245:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;577:245:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;577:245:1;;;;;;;;;;;;:::i;:::-;;1234:110:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1234:110:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9274:169:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9274:169:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;224:51:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;224:51:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:210:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1325:210:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;171:49:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;171:49:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:232;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2152:232:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;677:150:15;768:4;789:19;:33;809:12;789:33;;;;;;;;;;;;;;;;;;;;;;;;;;;782:40;;677:150;;;:::o;864:100:11:-;915:19;952:7;944:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:100;:::o;1883:233:2:-;1975:4;1952:8;1759:23;1735:47;;;;;;;;:10;:20;1746:8;1735:20;;;;;;;;;;;;;;;;;;;;;:47;;;;;;;;;1727:56;;;;;;2021:23;1997:47;;;;;;;;:10;:20;2008:8;1997:20;;;;;;;;;;;;;;;;;;;;;:47;;;;;;;;;1989:56;;;;;;2074:20;2051:10;:20;2062:8;2051:20;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;;;;;;;2107:4;2100:11;;1883:233;;;;:::o;8853:160:12:-;8962:7;8939:8;3786:1;3755:33;;:9;:19;3765:8;3755:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3747:42;;;;;;8986:12;:22;8999:8;8986:22;;;;;;;;;;;;;;;;;;;;;8979:29;;8853:160;;;;:::o;6815:315::-;6909:8;3051:18;3072:9;:19;3082:8;3072:19;;;;;;;;;;;;;;;;;;;;;3051:40;;3119:10;3105:24;;:10;:24;;;:68;;;;3133:16;:28;3150:10;3133:28;;;;;;;;;;;;;;;:40;3162:10;3133:40;;;;;;;;;;;;;;;;;;;;;;;;;3105:68;3097:77;;;;;;6936:8;3786:1;3755:33;;:9;:19;3765:8;3755:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3747:42;;;;;;6954:18;6975:9;:19;6985:8;6975:19;;;;;;;;;;;;;;;;;;;;;6954:40;;7021:10;7008:23;;:9;:23;;;;7000:32;;;;;;7064:9;7039:12;:22;7052:8;7039:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;7116:8;7105:9;7084:41;;7093:10;7084:41;;;;;;;;;;;;3795:1;3180;6815:315;;;;:::o;951:100:10:-;1009:7;1033:6;:13;;;;1026:20;;951:100;:::o;984:200:2:-;1049:4;1094:18;1071:41;;;;;;;;:9;:19;1081:8;1071:19;;;;;;;;;;;;;;;;;;;;;:41;;;;;;;;;1063:50;;;;;;1141:21;1119:9;:19;1129:8;1119:19;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;;;;;;;1175:4;1168:11;;984:200;;;:::o;6103:300:12:-;6216:8;3375:18;3396:9;:19;3406:8;3396:19;;;;;;;;;;;;;;;;;;;;;3375:40;;3450:10;3436:24;;:10;:24;;;:70;;;;3496:10;3470:36;;:12;:22;3483:8;3470:22;;;;;;;;;;;;;;;;;;;;;:36;;;3436:70;:120;;;;3516:16;:28;3533:10;3516:28;;;;;;;;;;;;;;;:40;3545:10;3516:40;;;;;;;;;;;;;;;;;;;;;;;;;3436:120;3421:141;;;;;;6243:8;3786:1;3755:33;;:9;:19;3765:8;3755:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3747:42;;;;;;6261:18;6282:9;:19;6292:8;6282:19;;;;;;;;;;;;;;;;;;;;;6261:40;;6329:5;6315:19;;:10;:19;;;6307:28;;;;;;6364:1;6349:17;;:3;:17;;;;6341:26;;;;;;6374:24;6384:3;6389:8;6374:9;:24::i;:::-;3795:1;3568;6103:300;;;;;:::o;1575:212:10:-;1683:7;1717:10;:18;1728:6;1717:18;;;;;;;;;;;;;;;:25;;;;1708:6;:34;1700:43;;;;;;1756:10;:18;1767:6;1756:18;;;;;;;;;;;;;;;1775:6;1756:26;;;;;;;;;;;;;;;;1749:33;;1575:212;;;;:::o;5380:157:12:-;5489:43;5507:5;5514:3;5519:8;5489:43;;;;;;;;;;;;:17;:43::i;:::-;5380:157;;;:::o;924:101:1:-;1134:5:5;;;;;;;;;;;1120:19;;:10;:19;;;1141:9;;;;;;;;;;;;;;;;;1112:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:21:1;1011:8;999:11;:21::i;:::-;924:101;:::o;1185:161:10:-;1266:7;1300:6;:13;;;;1291:6;:22;1283:31;;;;;;1327:6;1334;1327:14;;;;;;;;;;;;;;;;1320:21;;1185:161;;;:::o;434:46:5:-;;;;;;;;;;;;;;;;;;;:::o;8446:170:12:-;8524:14;8557:9;:19;8567:8;8557:19;;;;;;;;;;;;;;;;;;;;;8548:28;;8608:1;8590:20;;:6;:20;;;;8582:29;;;;;;8446:170;;;:::o;8028:167::-;8106:7;8149:1;8131:20;;:6;:20;;;;8123:29;;;;;;8165:25;8183:6;8165:17;:25::i;:::-;8158:32;;8028:167;;;:::o;387:43:5:-;;;;;;;;;;;;;;;;;;;:::o;530:20::-;;;;;;;;;;;;;:::o;1067:108:11:-;1120:21;1161:9;1151:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:108;:::o;7532:210:12:-;7669:9;7627:16;:28;7644:10;7627:28;;;;;;;;;;;;;;;:39;7656:9;7627:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;7716:9;7689:48;;7704:10;7689:48;;;7727:9;7689:48;;;;;;;;;;;;;;;;;;;;;;7532:210;;:::o;751:198:2:-;814:4;859:21;836:44;;;;;;;;:9;:19;846:8;836:19;;;;;;;;;;;;;;;;;;;;;:44;;;;;;;;;828:53;;;;;;909:18;887:9;:19;897:8;887:19;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;940:4;933:11;;751:198;;;:::o;4795:186:12:-;4930:46;4948:5;4955:3;4960:8;4970:5;;4930:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4930:46:12;;;;;;:17;:46::i;:::-;4795:186;;;;;:::o;2434:116:2:-;2498:12;2525:10;:20;2536:8;2525:20;;;;;;;;;;;;;;;;;;;;;2518:27;;2434:116;;;:::o;1321:158:11:-;1427:13;1404:8;3786:1:12;3755:33;;:9;:19;3765:8;3755:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3747:42;;;;;;1457:7:11;:17;1465:8;1457:17;;;;;;;;;;;1450:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:158;;;;:::o;577:245:1:-;1134:5:5;;;;;;;;;;;1120:19;;:10;:19;;;1141:9;;;;;;;;;;;;;;;;;1112:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;695:21:1;707:8;695:11;:21::i;:::-;;722:23;736:8;722:13;:23::i;:::-;;751:26;763:3;768:8;751:11;:26::i;:::-;783:34;802:8;812:4;;783:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;783:34:1;;;;;;:18;:34::i;:::-;577:245;;;;:::o;1234:110:2:-;1294:11;1320:9;:19;1330:8;1320:19;;;;;;;;;;;;;;;;;;;;;1313:26;;1234:110;;;:::o;9274:169:12:-;9382:4;9403:16;:24;9420:6;9403:24;;;;;;;;;;;;;;;:35;9428:9;9403:35;;;;;;;;;;;;;;;;;;;;;;;;;9396:42;;9274:169;;;;:::o;224:51:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;1325:210:5:-;1134:5;;;;;;;;;;;1120:19;;:10;:19;;;1141:9;;;;;;;;;;;;;;;;;1112:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441:1;1420:23;;:9;:23;;;;1445:12;;;;;;;;;;;;;;;;;1412:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1412:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1497:9;1469:38;;1490:5;;;;;;;;;;;1469:38;;;;;;;;;;;;1521:9;1513:5;;:17;;;;;;;;;;;;;;;;;;1325:210;:::o;171:49:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;2152:232::-;2243:4;2220:8;1590:20;1566:44;;;;;;;;:10;:20;1577:8;1566:20;;;;;;;;;;;;;;;;;;;;;:44;;;;;;;;;1558:53;;;;;;2289:20;2265:44;;;;;;;;:10;:20;2276:8;2265:20;;;;;;;;;;;;;;;;;;;;;:44;;;;;;;;;2257:53;;;;;;2339:23;2316:10;:20;2327:8;2316:20;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;2375:4;2368:11;;2152:232;;;;:::o;9626:262:12:-;9709:12;9724:9;:19;9734:8;9724:19;;;;;;;;;;;;;;;;;;;;;9709:34;;9749:24;9764:8;9749:14;:24::i;:::-;9780:30;9795:4;9801:8;9780:14;:30::i;:::-;9816:26;9828:3;9833:8;9816:11;:26::i;:::-;9874:8;9869:3;9854:29;;9863:4;9854:29;;;;;;;;;;;;9626:262;;;:::o;12843:520::-;12984:8;3375:18;3396:9;:19;3406:8;3396:19;;;;;;;;;;;;;;;;;;;;;3375:40;;3450:10;3436:24;;:10;:24;;;:70;;;;3496:10;3470:36;;:12;:22;3483:8;3470:22;;;;;;;;;;;;;;;;;;;;;:36;;;3436:70;:120;;;;3516:16;:28;3533:10;3516:28;;;;;;;;;;;;;;;:40;3545:10;3516:40;;;;;;;;;;;;;;;;;;;;;;;;;3436:120;3421:141;;;;;;13011:8;3786:1;3755:33;;:9;:19;3765:8;3755:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3747:42;;;;;;13029:18;13050:9;:19;13060:8;13050:19;;;;;;;;;;;;;;;;;;;;;13029:40;;13097:5;13083:19;;:10;:19;;;13075:28;;;;;;13132:1;13117:17;;:3;:17;;;;13109:26;;;;;;13142:24;13152:3;13157:8;13142:9;:24::i;:::-;13177:16;:3;:14;;;:16::i;:::-;13173:186;;;13208:13;13244:3;13224:41;;;13266:10;13278:5;13285:8;13295:5;13224:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13224:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13224:77:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13224:77:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13224:77:12;;;;;;;;;;;;;;;;13208:93;;600:10;13327:24;;13317:34;;;:6;:34;;;;13309:43;;;;;;13173:186;;3795:1;3568;12843:520;;;;;;:::o;2753:455:10:-;2815:21;2827:8;2815:11;:21::i;:::-;2843:18;2864:9;:19;2874:8;2864:19;;;;;;;;;;;;2843:40;;2889:22;2930:1;2914:6;:13;;;;:17;2889:42;;2937:17;2957:6;2964:14;2957:22;;;;;;;;;;;;;;;;2937:42;;3007:9;2986:6;2993:10;2986:18;;;;;;;;;;;;;;;:30;;;;3023:6;:15;;;;;;;;;;;;:::i;:::-;;3164:10;3141:9;:20;3151:9;3141:20;;;;;;;;;;;:33;;;;3202:1;3180:9;:19;3190:8;3180:19;;;;;;;;;;;:23;;;;2753:455;;;;:::o;4837:140::-;4923:7;4947:10;:18;4958:6;4947:18;;;;;;;;;;;;;;;:25;;;;4940:32;;4837:140;;;:::o;2168:192::-;2247:26;2259:3;2264:8;2247:11;:26::i;:::-;2279:14;2296:6;2308:8;2296:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2296:21:10;;;;;;;;;;;;;;;;;;;;;2279:38;;2354:1;2345:6;:10;2323:9;:19;2333:8;2323:19;;;;;;;;;;;:32;;;;2168:192;;;:::o;2436:149:11:-;2538:8;3786:1:12;3755:33;;:9;:19;3765:8;3755:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3747:42;;;;;;2576:4:11;2556:7;:17;2564:8;2556:17;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;2436:149;;;:::o;13491:164:12:-;13599:1;13565:36;;:12;:22;13578:8;13565:22;;;;;;;;;;;;;;;;;;;;;:36;;;13561:90;;13622:12;:22;13635:8;13622:22;;;;;;;;;;;;13615:29;;;;;;;;;;;13561:90;13491:164;:::o;3479:547:10:-;3600:5;3577:28;;:9;:19;3587:8;3577:19;;;;;;;;;;;;;;;;;;;;;:28;;;3569:37;;;;;;3619:9;:19;3629:8;3619:19;;;;;;;;;;;;3612:26;;;;;;;;;;;3645;3674:14;:24;3689:8;3674:24;;;;;;;;;;;;3645:53;;3704:22;3756:1;3729:10;:17;3740:5;3729:17;;;;;;;;;;;;;;;:24;;;;:28;3704:53;;3786:18;3768:14;:36;3764:225;;3818:17;3838:10;:17;3849:5;3838:17;;;;;;;;;;;;;;;3856:14;3838:33;;;;;;;;;;;;;;;;3818:53;;3919:9;3879:10;:17;3890:5;3879:17;;;;;;;;;;;;;;;3897:18;3879:37;;;;;;;;;;;;;;;:49;;;;3964:18;3936:14;:25;3951:9;3936:25;;;;;;;;;;;:46;;;;3764:225;;3995:10;:17;4006:5;3995:17;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;3479:547;;;;:::o;4290:260::-;4414:1;4383:33;;:9;:19;4393:8;4383:19;;;;;;;;;;;;;;;;;;;;;:33;;;4375:42;;;;;;4445:3;4423:9;:19;4433:8;4423:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4455:14;4472:10;:15;4483:3;4472:15;;;;;;;;;;;;;;;4493:8;4472:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4472:30:10;;;;;;;;;;;;;;;;;;;;;4455:47;;4544:1;4535:6;:10;4508:14;:24;4523:8;4508:24;;;;;;;;;;;:37;;;;4290:260;;;:::o;280:596:13:-;358:17;385:12;811:5;799:18;791:26;;870:1;863:4;:8;848:23;;280:596;;;;:::o;1872:179:11:-;1934:21;1946:8;1934:11;:21::i;:::-;2001:1;1972:7;:17;1980:8;1972:17;;;;;;;;;;;1966:31;;;;;;;;;;;;;;;;:36;1962:85;;2023:7;:17;2031:8;2023:17;;;;;;;;;;;;2016:24;;;;:::i;:::-;1962:85;1872:179;:::o;10272:238:12:-;10374:1;10359:17;;:3;:17;;;;10351:26;;;;;;10422:1;10391:33;;:9;:19;10401:8;10391:19;;;;;;;;;;;;;;;;;;;;;:33;;;10383:42;;;;;;10432:26;10444:3;10449:8;10432:11;:26::i;:::-;10496:8;10491:3;10470:35;;10487:1;10470:35;;;;;;;;;;;;10272:238;;:::o;10903:259::-;10974:8;3786:1;3755:33;;:9;:19;3765:8;3755:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3747:42;;;;;;10992:18;11013:9;:19;11023:8;11013:19;;;;;;;;;;;;;;;;;;;;;10992:40;;11038:24;11053:8;11038:14;:24::i;:::-;11068:36;11083:10;11095:8;11068:14;:36::i;:::-;11148:8;11144:1;11115:42;;11124:10;11115:42;;;;;;;;;;;;3795:1;10903:259;;:::o;146:207:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.6;\n\nimport \"./FourPark.sol\";\n\n/**\n * @dev This is an example contract implementation of NFToken with metadata extension.\n */\ncontract FPMV1 is FourPark {\n\n  /**\n   * @dev Contract constructor. Sets metadata extension `name` and `symbol`. \n   */\n  constructor()\n    public\n  {\n    nftName = \"Vault 1\";\n    nftSymbol = \"FPMV1\";\n  }\n\n}",
  "sourcePath": "/Users/superphly/dev/fp/contracts/contracts/ArtVault-1.sol",
  "ast": {
    "absolutePath": "/Users/superphly/dev/fp/contracts/contracts/ArtVault-1.sol",
    "exportedSymbols": {
      "FPMV1": [
        17
      ]
    },
    "id": 18,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/superphly/dev/fp/contracts/contracts/FourPark.sol",
        "file": "./FourPark.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 18,
        "sourceUnit": 81,
        "src": "25:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "FourPark",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 80,
              "src": "164:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FourPark_$80",
                "typeString": "contract FourPark"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "164:8:0"
          }
        ],
        "contractDependencies": [
          80,
          291,
          534,
          558,
          578,
          694,
          989,
          1095,
          1725,
          1756,
          1788
        ],
        "contractKind": "contract",
        "documentation": "@dev This is an example contract implementation of NFToken with metadata extension.",
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17,
          80,
          291,
          989,
          558,
          1095,
          578,
          1725,
          1788,
          1756,
          694,
          534
        ],
        "name": "FPMV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "295:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "301:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "5661756c742031",
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "311:9:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_5b3da92fefe62f6362c29303219ca5bddd0951aeaeff21664a5b6245a77a28b5",
                        "typeString": "literal_string \"Vault 1\""
                      },
                      "value": "Vault 1"
                    },
                    "src": "301:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10,
                  "nodeType": "ExpressionStatement",
                  "src": "301:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "326:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "46504d5631",
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "338:7:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_3080715709e5348ffc50f5aa8648d072e9d7aac20765634d4b17d27ecaf424d7",
                        "typeString": "literal_string \"FPMV1\""
                      },
                      "value": "FPMV1"
                    },
                    "src": "326:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "326:19:0"
                }
              ]
            },
            "documentation": "@dev Contract constructor. Sets metadata extension `name` and `symbol`. ",
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:0"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:0:0"
            },
            "scope": 17,
            "src": "268:82:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 18,
        "src": "146:207:0"
      }
    ],
    "src": "0:353:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/superphly/dev/fp/contracts/contracts/ArtVault-1.sol",
    "exportedSymbols": {
      "FPMV1": [
        17
      ]
    },
    "id": 18,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/superphly/dev/fp/contracts/contracts/FourPark.sol",
        "file": "./FourPark.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 18,
        "sourceUnit": 81,
        "src": "25:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "FourPark",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 80,
              "src": "164:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FourPark_$80",
                "typeString": "contract FourPark"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "164:8:0"
          }
        ],
        "contractDependencies": [
          80,
          291,
          534,
          558,
          578,
          694,
          989,
          1095,
          1725,
          1756,
          1788
        ],
        "contractKind": "contract",
        "documentation": "@dev This is an example contract implementation of NFToken with metadata extension.",
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17,
          80,
          291,
          989,
          558,
          1095,
          578,
          1725,
          1788,
          1756,
          694,
          534
        ],
        "name": "FPMV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "295:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "301:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "5661756c742031",
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "311:9:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_5b3da92fefe62f6362c29303219ca5bddd0951aeaeff21664a5b6245a77a28b5",
                        "typeString": "literal_string \"Vault 1\""
                      },
                      "value": "Vault 1"
                    },
                    "src": "301:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10,
                  "nodeType": "ExpressionStatement",
                  "src": "301:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "326:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "46504d5631",
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "338:7:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_3080715709e5348ffc50f5aa8648d072e9d7aac20765634d4b17d27ecaf424d7",
                        "typeString": "literal_string \"FPMV1\""
                      },
                      "value": "FPMV1"
                    },
                    "src": "326:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "326:19:0"
                }
              ]
            },
            "documentation": "@dev Contract constructor. Sets metadata extension `name` and `symbol`. ",
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:0"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:0:0"
            },
            "scope": 17,
            "src": "268:82:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 18,
        "src": "146:207:0"
      }
    ],
    "src": "0:353:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.5",
  "updatedAt": "2019-03-23T21:13:18.454Z",
  "devdoc": {
    "details": "This is an example contract implementation of NFToken with metadata extension.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "return": "Balance of _owner."
      },
      "burn(uint256)": {
        "details": "Removes a NFT from owner.",
        "params": {
          "_tokenId": "Which NFT we want to remove."
        }
      },
      "constructor": {
        "details": "Contract constructor. Sets metadata extension `name` and `symbol`. "
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "return": "Address that _tokenId is approved for. "
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "return": "True if approved for all, false otherwise."
      },
      "mint(address,uint256,string)": {
        "details": "Mints a new NFT.",
        "params": {
          "_to": "The address that will own the minted NFT.",
          "_tokenId": "of the NFT to be minted by the msg.sender.",
          "_uri": "String representing RFC 3986 URI."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "return": "Representing name. "
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "return": "Address of _tokenId owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "return": "True if _interfaceID is supported, false otherwise."
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "return": "Representing symbol. "
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "return": "Token id."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "return": "Token id."
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "return": "URI of _tokenId."
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "return": "Total supply of NFTs."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "secureToken(uint256)": {
        "notice": "*******************************************"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}