{
  "contractName": "ERC165",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.6;\n\n/**\n * @dev A standard for detecting smart contract interfaces. \n * See: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md.\n */\ninterface ERC165\n{\n\n  /**\n   * @dev Checks if the smart contract includes a specific interface.\n   * @notice This function uses less than 30,000 gas.\n   * @param _interfaceID The interface identifier, as specified in ERC-165.\n   * @return True if _interfaceID is supported, false otherwise.\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  )\n    external\n    view\n    returns (bool);\n    \n}\n",
  "sourcePath": "@0xcert/ethereum-erc721/src/contracts/utils/erc165.sol",
  "ast": {
    "absolutePath": "@0xcert/ethereum-erc721/src/contracts/utils/erc165.sol",
    "exportedSymbols": {
      "ERC165": [
        1756
      ]
    },
    "id": 1757,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1748,
        "literals": [
          "solidity",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:14"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev A standard for detecting smart contract interfaces. \nSee: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md.",
        "fullyImplemented": false,
        "id": 1756,
        "linearizedBaseContracts": [
          1756
        ],
        "name": "ERC165",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Checks if the smart contract includes a specific interface.\n@notice This function uses less than 30,000 gas.\n@param _interfaceID The interface identifier, as specified in ERC-165.\n@return True if _interfaceID is supported, false otherwise.",
            "id": 1755,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1750,
                  "name": "_interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1755,
                  "src": "494:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1749,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:29:14"
            },
            "returnParameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1755,
                  "src": "553:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:6:14"
            },
            "scope": 1756,
            "src": "462:97:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1757,
        "src": "163:403:14"
      }
    ],
    "src": "0:567:14"
  },
  "legacyAST": {
    "absolutePath": "@0xcert/ethereum-erc721/src/contracts/utils/erc165.sol",
    "exportedSymbols": {
      "ERC165": [
        1756
      ]
    },
    "id": 1757,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1748,
        "literals": [
          "solidity",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:14"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev A standard for detecting smart contract interfaces. \nSee: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md.",
        "fullyImplemented": false,
        "id": 1756,
        "linearizedBaseContracts": [
          1756
        ],
        "name": "ERC165",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Checks if the smart contract includes a specific interface.\n@notice This function uses less than 30,000 gas.\n@param _interfaceID The interface identifier, as specified in ERC-165.\n@return True if _interfaceID is supported, false otherwise.",
            "id": 1755,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1750,
                  "name": "_interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1755,
                  "src": "494:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1749,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:29:14"
            },
            "returnParameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1755,
                  "src": "553:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:6:14"
            },
            "scope": 1756,
            "src": "462:97:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1757,
        "src": "163:403:14"
      }
    ],
    "src": "0:567:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.5",
  "updatedAt": "2019-03-23T21:13:18.462Z",
  "devdoc": {
    "details": "A standard for detecting smart contract interfaces.  See: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md.",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "Checks if the smart contract includes a specific interface.",
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165."
        },
        "return": "True if _interfaceID is supported, false otherwise."
      }
    }
  },
  "userdoc": {
    "methods": {
      "supportsInterface(bytes4)": {
        "notice": "This function uses less than 30,000 gas."
      }
    }
  }
}